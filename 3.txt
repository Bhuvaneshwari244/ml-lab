3. Write a Python program to implement Simple Linear
Regression
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
# Data
X = np.array([5, 15, 25, 35, 45, 55]).reshape((-1, 1))
Y = np.array([5, 20, 14, 32, 22, 38])
print("X:", X)
print("Y:", Y)
# Create and train the model
model = LinearRegression()
model.fit(X, Y)
# Coefficient of determination
r_sq = model.score(X, Y)
print("Coefficient of determination (R^2):", r_sq)
# Model parameters
print("Intercept:", model.intercept_)
print("Slope:", model.coef_)
# Predicted response
Y_pred = model.predict(X)
print("Predicted response:", Y_pred)
# Visualization
plt.scatter(X, Y, color='blue', label='Actual')
plt.plot(X, Y_pred, color='red', label='Predicted')
plt.xlabel('X (Independent variable)')
plt.ylabel('Y (Dependent variable)')
plt.title('Simple Linear Regression')
plt.legend()
plt.show()

OUTPUT: 
X: [[ 5]
 [15]
 [25]
 [35]
 [45]
 [55]]
Y: [ 5 20 14 32 22 38]
Coefficient of determination (R^2): 0.7158756137479542
Intercept: 5.633333333333329
Slope: [0.54]
Predicted response: [ 8.33333333 13.73333333 19.13333333 24.53333333 29.93333333 35.33333333]


 


